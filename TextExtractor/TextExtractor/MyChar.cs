using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace TextExtractor
{
    struct MyChar
    {
        private static Dictionary<byte, char> charMap = new Dictionary<byte, char>
        {
            {0x0, ' ' },
            {0x2, '!' },
            {0x4, '\"' },
            {0x6, '$' },
            {0x8, '%' },
            {0x0A, '&' },
            {0x0C, '\'' },
            {0x0E, '('},
            {0x10, ')' },
            {0x12, '*' },
            {0x14, '+'},
            {0x16, ',' },
            {0x18, '-' },
            {0x1A, '.' },
            {0x1C, '/' },
            {0x1E, '0' },
            {0x20, '1' },
            {0x22, '2' },
            {0x24, '3' },
            {0x26, '4' },
            {0x28, '5' },
            {0x2A, '6' },
            {0x2C, '7' },
            {0x2E, '8' },
            {0x30, '9' },
            {0x32, ':' },
            {0x34, ';' },
            {0x36, '<' },
            {0x38, '=' },
            {0x3A, '>' },
            {0x3C, '?' },
            {0x3E, '@' },
            {0x40, 'A' },
            {0x42, 'B' },
            {0x44, 'C' },
            {0x46, 'D' },
            {0x48, 'E' },
            {0x4A, 'F' },
            {0x4C, 'G' },
            {0x4E, 'H' },
            {0x50, 'I' },
            {0x52, 'J' },
            {0x54, 'K' },
            {0x56, 'L' },
            {0x58, 'M' },
            {0x5A, 'N' },
            {0x5C, 'O' },
            {0x5E, 'P' },
            {0x60, 'Q' },
            {0x62, 'R' },
            {0x64, 'S' },
            {0x66, 'T' },
            {0x68, 'U' },
            {0x6A, 'V' },
            {0x6C, 'W' },
            {0x6E, 'X' },
            {0x70, 'Y' },
            {0x72, 'Z' },
            {0x74, '[' },
            {0x76, '\\' },
            {0x78, ']' },
            {0x7A, '_' },
            {0x7C, 'a' },
            {0x7E, 'b' },
            {0x80, 'c' },
            {0x82, 'd' },
            {0x84, 'e' },
            {0x86, 'f' },
            {0x88, 'g' },
            {0x8A, 'h' },
            {0x8C, 'i' },
            {0x8E, 'j' },
            {0x90, 'k' },
            {0x92, 'l' },
            {0x94, 'm' },
            {0x96, 'n' },
            {0x98, 'o' },
            {0x9A, 'p' },
            {0x9C, 'q' },
            {0x9E, 'r' },
            {0xA0, 's' },
            {0xA2, 't' },
            {0xA4, 'u' },
            {0xA6, 'v' },
            {0xA8, 'w' },
            {0xAA, 'x' },
            {0xAC, 'y' },
            {0xAE, 'z' },
            {0xB0, '|' },
            {0xB2, '~' }
        };

        private static Dictionary<byte, char> charMap360 = new Dictionary<byte, char>
        {
            {0x0, '0' },
            {0x2, '1' },
            {0x4, '2' },
            {0x6, '3' },
            {0x8, '4' },
            {0x0A, '5' },
            {0x0C, '6' },
            {0x0E, '7'},
            {0x10, '8' },
            {0x12, '9' },
            {0x14, '0'},
            {0x16, '%' },
            {0x18, '-' },
            {0x1A, '.' },
            {0x1C, ' ' },
            {0x1E, ' ' },
            {0x20, ':' },
            {0x22, '�' },
            {0x24, ',' },
            {0x26, '.' },
            {0x28, '�' },
            {0x2A, '�' },
            {0x2C, '�' },
            {0x2E, '-' },
            {0x30, '+' },
            {0x32, '/' },
            {0x34, ';' },
            {0x36, '<' },
            {0x38, 'A' },
            {0x3A, 'B' },
            {0x3C, 'C' },
            {0x3E, 'D' },
            {0x40, 'E' },
            {0x42, 'F' },
            {0x44, 'G' },
            {0x46, 'H' },
            {0x48, 'I' },
            {0x4A, 'J' },
            {0x4C, 'K' },
            {0x4E, 'L' },
            {0x50, 'M' },
            {0x52, 'N' },
            {0x54, 'O' },
            {0x56, 'P' },
            {0x58, 'Q' },
            {0x5A, 'R' },
            {0x5C, 'S' },
            {0x5E, 'T' },
            {0x60, 'U' },
            {0x62, 'V' },
            {0x64, 'W' },
            {0x66, 'X' },
            {0x68, 'Y' },
            {0x6A, 'Z' },
            {0x6C, 'a' },
            {0x6E, 'b' },
            {0x70, 'c' },
            {0x72, 'd' },
            {0x74, 'e' },
            {0x76, 'f' },
            {0x78, 'g' },
            {0x7A, 'h' },
            {0x7C, 'i' },
            {0x7E, 'j' },
            {0x80, 'k' },
            {0x82, 'l' },
            {0x84, 'm' },
            {0x86, 'n' },
            {0x88, 'o' },
            {0x8A, 'p' },
            {0x8C, 'q' },
            {0x8E, 'r' },
            {0x90, 's' },
            {0x92, 't' },
            {0x94, 'u' },
            {0x96, 'v' },
            {0x98, 'w' },
            {0x9A, 'x' },
            {0x9C, 'y' },
            {0x9E, 'z' },
            {0xA0, '[' },
            {0xA2, ']' }
        };

        private static Dictionary<byte, char> charMap360Beta = new Dictionary<byte, char>
        {
            {0x0, ' ' },
            {0x2, '1' },
            {0x4, '2' },
            {0x6, '3' },
            {0x8, '4' },
            {0x0A, '5' },
            {0x0C, '6' },
            {0x0E, '7'},
            {0x10, '8' },
            {0x12, '9' },
            {0x14, ' '},
            {0x16, '%' },
            {0x18, '(' },
            {0x1A, ')' },
            {0x1C, ' ' },
            {0x1E, ' ' },
            {0x20, ':' },
            {0x22, '�' },
            {0x24, ',' },
            {0x26, '.' },
            {0x28, '�' },
            {0x2A, '�' },
            {0x2C, '�' },
            {0x2E, '�' },
            {0x30, '�' },
            {0x32, '�' },
            {0x34, 'A' },
            {0x36, 'B' },
            {0x38, 'C' },
            {0x3A, 'D' },
            {0x3C, 'E' },
            {0x3E, 'F' },
            {0x40, 'G' },
            {0x42, 'H' },
            {0x44, 'I' },
            {0x46, 'J' },
            {0x48, 'K' },
            {0x4A, 'L' },
            {0x4C, 'M' },
            {0x4E, 'N' },
            {0x50, 'O' },
            {0x52, 'P' },
            {0x54, 'Q' },
            {0x56, 'R' },
            {0x58, 'S' },
            {0x5A, 'T' },
            {0x5C, 'U' },
            {0x5E, 'V' },
            {0x60, 'W' },
            {0x62, 'X' },
            {0x64, 'Y' },
            {0x66, 'Z' },
            {0x68, 'a' },
            {0x6A, 'b' },
            {0x6C, 'c' },
            {0x6E, 'd' },
            {0x70, 'e' },
            {0x72, 'f' },
            {0x74, 'g' },
            {0x76, 'h' },
            {0x78, 'i' },
            {0x7A, 'j' },
            {0x7C, 'k' },
            {0x7E, 'l' },
            {0x80, 'm' },
            {0x82, 'n' },
            {0x84, 'o' },
            {0x86, 'p' },
            {0x88, 'q' },
            {0x8A, 'r' },
            {0x8C, 's' },
            {0x8E, 't' },
            {0x90, 'u' },
            {0x92, 'v' },
            {0x94, 'w' },
            {0x96, 'x' },
            {0x98, 'y' },
            {0x9A, 'z' },
            {0x9C, '�' },
            {0x9E, '�' },
            {0xA0, '�' },
            {0xA2, '�' }
        };

        public bool EOL;
        public char Value;

        public MyChar(byte[] hex, string platform = "PC")
        {
            var map = platform == "X360" ? charMap360 : charMap;
            map = platform == "X360Beta" ? charMap360Beta : charMap;
            if (!map.ContainsKey(hex[2]))
            {
                if (!map.ContainsKey((byte)(hex[2] - 1)))
                {
                    Value = '�';
                }
                else
                {
                    Value = map[(byte)(hex[2] - 1)];
                }
            }
            else
            {
                Value = map[hex[2]];
            }

            EOL = hex[5] == 0x4;
            if (EOL && platform == "X360") { Value = ' '; }
        }
    }
}
